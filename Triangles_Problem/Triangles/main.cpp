#include <iostream>
#include "Intersect_algo.h"
#include <vector>
#include <fstream>
#include <string>

void Input_trian_coord()
{
    double a1 = NAN, a2 = NAN, a3 = NAN, b1 = NAN, b2 = NAN, b3 = NAN, c1 = NAN, c2 = NAN, c3 = NAN;

    //! Input coordinate of points
    //! Point №1
    std::cin >> a1 >> b1 >> c1;
    //! Point №2
    std::cin >> a2 >> b2 >> c2;
    //! Point №3
    std::cin >> a3 >> b3 >> c3;
}



int main()
{
    Vec vec1(0, 1, 2), vec2(0, 0, 0), vec3(1, 1, 1), vec4(2, 2, 2), vec5(0, 0, 0), vec6(5, 5, 5);

    Triangle trian1(vec1, vec2, vec3), trian2(vec4, vec5, vec6);

    bool res = Intersect_algos(trian1, trian2);

    if (res)
        printf("Intersect!\n");

    else
        printf("Doesnt intersect!\n");

    return 0;
}













/*
    Схема алгоритма выглядит следующим образом:

    1. Определите, являются ли T0 или T1 (или оба) вырожденными, и выполните обработку в зависимости от приложения (это может означать выход из алгоритма пересечения или нет).

    2. Вычислите плоское уравнение для T0.

    3. Вычислите расстояния со знаком distV1, i, i ∈ {0, 1, 2}, до вершин T1.

    4. Сравните знаки distV1, i, i ∈ {0, 1, 2}: если они все одинаковые, вернуть false; в противном случае переходите к следующему шагу.

    5. Вычислите плоское уравнение T1.

    6. Если плоские уравнения P0 и P1 одинаковы (или, скорее, в пределах 1), то сравните значения d, чтобы увидеть, совпадают ли плоскости (в пределах 1):
    - Если они совпадают, спроецируйте треугольники на выровненную по оси полосу, которая является наиболее
    почти сориентирован с плоскостью треугольников, и выполните тест на пересечение двухмерных треугольников.
    - В противном случае параллельные плоскости не совпадают, поэтому пересечение невозможно;
    выйти из алгоритма.

    7. Сравните признаки distV0, i, i ∈ {0, 1, 2}: если они все одинаковые, вернуть false; в противном случае переходите к следующему шагу.

    8. Вычислить линию пересечения.

    9. Вычислить интервалы.
     - Если интервалы не перекрываются, треугольники не пересекаются. Вернуть false.
     - В противном случае, если требуется пересекающийся отрезок прямой, вычислите его. В любом слючае верните истину.


     1. Project the triangle vertices V 0,i onto L:

            V 0,i = d · (V 0,i − P ),    i ∈ {0, 1, 2}
    2. Compute t 0,0 and t 0,1 as follows:


i ∈ {0, 1}
     */








